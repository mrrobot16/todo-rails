{"version":3,"file":"http.service.js","sourceRoot":"","sources":["http.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA8B,eAAe,CAAC,CAAA;AAI9C;IAKE,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAE1B,CAAC;IAED,+BAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC3B,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAClC,CAAC;IAED,8BAAQ,GAAR,UAAS,IAAU;QACjB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAEO,yBAAG,GAAX;QACA,uBAAuB;IAEvB,CAAC;IAEO,0BAAI,GAAZ,UAAa,IAAU;QACrB,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,OAAO,IAAI,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;SACnC,CAAC,CAAC;QACH,IAAI,OAAO,GAAG;YACZ,IAAI,EAAE;gBACJ,WAAW,EAAE,IAAI;aAClB;SACF,CAAA;QACD,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAClE,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;QACzB,uCAAuC;QACvC,iCAAiC;IACrC,CAAC;IA9CH;QAAC,iBAAU,EAAE;;mBAAA;IAmDb,kBAAC;AAAD,CAAC,AAlDD,IAkDC;AAlDY,mBAAW,cAkDvB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport {Todo} from '../models/todo.model';\n\n@Injectable()\nexport class HttpService{\n  public todos:any;\n  public all_todos:any;\n  public todo_end: string;\n\n  constructor(private http: Http){\n    console.log(\"Http Service on the move\");\n    this.all_todos = [];\n    this.todo_end = \"todos\";\n\n  }\n\n  get_todos():Promise<any>{\n    return this.http.get(this.todo_end)\n           .toPromise()\n           .then(res => res.json());\n  }\n\n  add_todo(todo: Todo):Promise<Todo>{\n    console.log(\"add_todo service 1\");\n    return this.post(todo);\n  }\n\n  private put(){\n  // Update existing TODO\n\n  }\n\n  private post(todo: Todo): Promise<Todo> {\n    console.log('post in service 2 todo argument: ', typeof todo);\n    console.log(\"REBUILD\");\n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });\n    var posting = {\n      todo: {\n        description: todo\n      }\n    }\n    return this.http\n      .post(this.todo_end, JSON.stringify(posting), { headers: headers })\n      .toPromise()\n      .then(res => res.json());\n      // {\"todo\"=> {\"description\"=> \"jello\"}}\n      // {\"_json\"=>\"hello\", \"todo\"=>{}}\n  }\n\n\n\n\n}\n"]}