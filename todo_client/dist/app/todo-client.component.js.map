{"version":3,"file":"todo-client.component.js","sourceRoot":"","sources":["todo-client.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Todo } from './models/todo.model';\nimport {HttpService} from './services/http.service';\nimport {HTTP_PROVIDERS} from '@angular/http';\n\n@Component({\n  moduleId: module.id,\n  selector: 'todo-client-app',\n  templateUrl: 'todo-client.component.html',\n  styleUrls: ['todo-client.component.css'],\n  providers:[HTTP_PROVIDERS, HttpService]\n})\n\nexport class TodoClientAppComponent implements OnInit {\n  todos: Todo[];\n  todo = null; // fix in [Object Object] in the html\n\n  constructor(private http_service: HttpService) {\n    console.log(\"plain todo: \", this.todo);\n  }\n\n  ngOnInit() {\n    this.get_todos();\n  }\n\n  // Note get my todos ---> TO CONTINUE YOU SAID CYBERSTRIKE WITNESS\n  get_todos():Promise<any> {\n  return this.http_service.get_todos().then(\n    (todos) => this.todos = todos\n  );\n  }\n\n  update_todo(todo: Todo):Promise<any>{\n    console.log(\"TODO PUT\", todo);\n    return this.http_service.update_todo(todo)\n    .then(\n      ()=>this.get_todos()\n    );\n  }\n\n  complete_todo(todo: Todo):Promise<any>{\n    console.log(\"COMPLETE TODO PUT\", todo);\n    todo.completed = !todo.completed;\n    console.log(\"COMPLETE TODO PUT2\", todo)\n    return this.http_service.update_todo(todo)\n    .then(\n      ()=>this.get_todos()\n    );\n  }\n\n  archive_todo(todo: Todo):Promise<any>{\n    console.log(\"Archive TODO PUT\", todo);\n    todo.archived = !todo.archived;\n    console.log(\"Archive TODO PUT2\", todo)\n    return this.http_service.update_todo(todo)\n    .then(\n      ()=>this.get_todos()\n    );\n  }\n\n\n  addTodo(todo) {\n    console.log(\"todo typeof: \", typeof todo);\n    // console.log(todo);\n    let new_todo = new Todo();\n    new_todo.description = todo;\n    new_todo.archived = false;\n    new_todo.completed = false;\n    this.http_service.add_todo(new_todo).then(todo=>this.get_todos());\n  }\n\n  delete_todo(todo):Promise<any>{\n    return this.http_service.delete(todo).then(()=> this.get_todos());\n  }\n\n}\n"]}